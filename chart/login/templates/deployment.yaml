apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{  .Chart.Name }}-deployment"
  labels:
    chart: '{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: "{{  .Chart.Name }}-selector"
        version: "current"
    spec:
      containers:
      - name: "{{  .Chart.Name  }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{ if .Values.istio.enabled }}
{{ else }}
        readinessProbe:
          httpGet:
            path: /health
            port: 9080
          initialDelaySeconds: 20
{{ end }}
        resources:
          requests:
            cpu: "{{ .Values.image.resources.requests.cpu }}"
            memory: "{{ .Values.image.resources.requests.memory }}"
        env:
          - name: PORT
            value: "{{ .Values.service.servicePort }}"
          - name: APPLICATION_NAME
            value: "{{ .Release.Name }}"
          - name: GITHUB_AUTH_CALLBACK_URL
            value: "{{ .Values.auth.github.callback }}"
          - name: FRONT_END_SUCCESS_CALLBACK
            value: "{{ .Values.auth.frontend.success }}"
          - name: FRONT_END_FAIL_CALLBACK
            value: "{{ .Values.auth.frontend.failure }}"
          - name: GITHUB_APP_ID
            valueFrom:
              secretKeyRef:
                name: githuboauth
                key: GITHUB_APP_ID
                optional: false
          - name: GITHUB_APP_SECRET
            valueFrom:
              secretKeyRef:
                name: githuboauth
                key: GITHUB_APP_SECRET
                optional: false
        volumeMounts:
        - mountPath: {{ .Values.keystore.mountPath }}
          name: keystore-pv
      volumes:
      - name: keystore-pv
        persistentVolumeClaim:
          claimName: keystore-pv-claim

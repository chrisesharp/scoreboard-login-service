<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>projects</groupId>
    <artifactId>login</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <parent>
        <groupId>net.wasdev.wlp.maven.parent</groupId>
        <artifactId>liberty-maven-app-parent</artifactId>
        <version>2.1</version>
    </parent>

    <repositories>
      <repository>
        <id>oss.sonatype.org-snapshot</id>
        <url>http://oss.sonatype.org/content/repositories/snapshots</url>
        <releases>
          <enabled>false</enabled>
        </releases>
        <snapshots>
          <enabled>true</enabled>
        </snapshots>
      </repository>
    </repositories>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <app.name>login</app.name>
        <testServerHttpPort>9080</testServerHttpPort>
        <testServerHttpsPort>9443</testServerHttpsPort>
        <warContext>${app.name}</warContext>
        <package.file>${project.build.directory}/${project.artifactId}-${project.version}.zip</package.file>
        <packaging.type>usr</packaging.type>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-client</artifactId>
            <version>3.1.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.ibm.websphere.appserver.api</groupId>
            <artifactId>com.ibm.websphere.appserver.api.jaxrs20</artifactId>
            <version>1.0.18</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.websphere.appserver.api</groupId>
            <artifactId>com.ibm.websphere.appserver.api.json</artifactId>
            <version>1.0.18</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.websphere.appserver.api</groupId>
            <artifactId>com.ibm.websphere.appserver.api.servlet</artifactId>
            <version>1.1.18</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.oauth-client</groupId>
            <artifactId>google-oauth-client</artifactId>
            <version>1.20.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.api-client</groupId>
            <artifactId>google-api-client</artifactId>
            <version>1.19.1</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.5.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.4.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.4.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.4.1</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.25</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
          <!-- Generate the keystore used by the Liberty servers -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>keytool-maven-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <!-- Delete any keystore that exists already -->
                    <execution>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <id>startOver</id>
                        <phase>generate-resources</phase>
                    </execution>
                    <!-- Create the keys used by Liberty SSL -->
                    <execution>
                        <goals>
                            <goal>generateKeyPair</goal>
                        </goals>
                        <id>createKeystore</id>
                        <phase>generate-resources</phase>
                        <configuration>
                            <keypass>secret</keypass>
                            <keyalg>RSA</keyalg>
                            <keysize>2048</keysize>
                            <sigalg>SHA256withRSA</sigalg>
                            <alias>default</alias>
                            <dname>cn=localhost, ou=authServer, O=IBM, C=us</dname>
                            <validity>999</validity>
                            <skipIfExist>true</skipIfExist>
                        </configuration>
                    </execution>
                </executions>
                <!-- Global configuration for the keytool plugin -->
                <configuration>
                    <keystore>${basedir}/src/main/liberty/config/security/key.jks</keystore>
                    <storepass>secret</storepass>
                    <storetype>jks</storetype>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <!-- Copy the keystore to integration tests for HTTPS -->
                    <execution>
                        <id>copy-keystore-to-liberty</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/liberty/wlp/usr/shared/resources/security</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>src/main/liberty/config/security/</directory>
                                    <includes>
                                        <include>key.jks</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>pom.xml</packagingExcludes>
                </configuration>
            </plugin>
            <!-- Plugin to run unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <id>default-test</id>
                        <configuration>
                            <excludes>
                                <exclude>**/it/**</exclude>
                            </excludes>
                            <reportsDirectory>${project.build.directory}/test-reports/unit</reportsDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Plugin to run functional tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/it/**</include>
                            </includes>
                            <systemPropertyVariables>
                                <liberty.test.port>${testServerHttpPort}</liberty.test.port>
                                <war.context>${warContext}</war.context>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify-results</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <summaryFile>${project.build.directory}/test-reports/it/failsafe-summary.xml</summaryFile>
                    <reportsDirectory>${project.build.directory}/test-reports/it</reportsDirectory>
                </configuration>
            </plugin>
            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <version>0.7.5.201505241946</version>
              <executions>
                  <!--
                      Prepares the property pointing to the JaCoCo runtime agent which
                      is passed as VM argument when Maven the Surefire plugin is executed.
                  -->
                  <execution>
                      <id>pre-unit-test</id>
                      <goals>
                          <goal>prepare-agent</goal>
                      </goals>
                      <configuration>
                          <!-- Sets the path to the file which contains the execution data. -->
                          <destFile>${project.build.directory}/jacoco.exec</destFile>
                          <!--
                              Sets the name of the property containing the settings
                              for JaCoCo runtime agent.
                          -->
                          <propertyName>surefireArgLine</propertyName>
                      </configuration>
                  </execution>
                  <!--
                      Ensures that the code coverage report for unit tests is created after
                      unit tests have been run.
                  -->
                  <execution>
                      <id>post-unit-test</id>
                      <phase>test</phase>
                      <goals>
                          <goal>report</goal>
                      </goals>
                      <configuration>
                          <!-- Sets the path to the file which contains the execution data. -->
                          <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                          <!-- Sets the output directory for the code coverage report. -->
                          <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                      </configuration>
                  </execution>
              </executions>
          </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>runnable</id>
            <properties>
                <package.file>${project.build.directory}/${app.name}.jar</package.file>
                <packaging.type>runnable</packaging.type>
            </properties>
        </profile>
        <profile>
            <id>liberty</id>
            <activation>
                <property>
                    <name>libertyEnv</name>
                    <value>!microclimate</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Default enablement of liberty-maven plugin -->
                    <plugin>
                        <groupId>net.wasdev.wlp.maven.plugins</groupId>
                        <artifactId>liberty-maven-plugin</artifactId>
                        <version>2.1.1</version>
                        <extensions>true</extensions>
                        <configuration>
                            <looseApplication>false</looseApplication>
                            <!--appsDirectory>apps</appsDirectory-->
                            <assemblyArtifact>
                                <groupId>com.ibm.websphere.appserver.runtime</groupId>
                                <artifactId>wlp-microProfile1</artifactId>
                                <version>18.0.0.2</version>
                                <type>zip</type>
                            </assemblyArtifact>
                            <configFile>${basedir}/src/main/liberty/config/server.xml</configFile>
                            <serverEnv>${basedir}/src/main/liberty/config/server.env</serverEnv>
                            <jvmOptionsFile>${basedir}/src/main/liberty/config/jvm.options</jvmOptionsFile>
                            <packageFile>${package.file}</packageFile>
                            <include>${packaging.type}</include>
                            <bootstrapProperties>
                                <default.http.port>${testServerHttpPort}</default.http.port>
                                <default.https.port>${testServerHttpsPort}</default.https.port>
                                <app.location>${project.artifactId}-${project.version}.war</app.location>
                            </bootstrapProperties>
                            <installAppPackages>project</installAppPackages>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install-feature</id>
                                <phase>prepare-package</phase>
                                <goals>
                                  <goal>install-feature</goal>
                                </goals>
                                <configuration>
                                    <features>
                                        <acceptLicense>true</acceptLicense>
                                    </features>
                                    <outputDirectory>target/liberty-alt-output-dir</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
